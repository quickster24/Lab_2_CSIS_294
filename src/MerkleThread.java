import java.util.ArrayList;

//DONE: this class implements Runnable
public class MerkleThread implements Runnable {
    //DONE: instance variables
    public static volatile ArrayList<String> lstWords;  //hold grabbed words
    private int iMerkleTreeInputs = 4; // required # of words to get before creating merkle tree

    //TODO: create method:  public run() method that is triggered when "start()  method" is called from MerkleManager
    public void run() {
        //TODO: instantiate a Util object
        //TODO: instantiate the ArrayList instance variable: lstWords = new ArrayList<String>();

        //DONE: create enless loop:
        while(true) {
            //TODO: call sleepRandomTime() on util variable.
                //example:  Util oUtil = new Util();
                //         oUtil.sleepRandomTime(threadName);
            //TODO: call grabWord() on MerkleManager
                //exmaple: String sNewWord = MerkleManager.grabWord();
            //TODO: if sNewWord is  NOT null:
                //TODO: print out that Merkle grabbed a word
                //TODO: Add word to lstWords like this:  lstWords.add(sNewWord);
                //TODO: Check if lstWords.size() is equal to iMerkleTreeInputs.
                //TODO: And if true, then set MerkleManager.sMerkleRoot to the merkle root generated by the getMerkleRoot method on util class.
        }
    }
}
